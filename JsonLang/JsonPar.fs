// Implementation file for parser generated by fsyacc
module JsonPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"

 (*
    Parsing specification for Json data literals
    
    AST in Fb:

    type json_pair = 
      | JsPair of key : string * value : json

    type json =
      | JsObject of members : list<json_pair>
      | JsArray of elements : list<json>
      | JsString of value : string
      | JsInteger of value : int
      | JsBoolean of value : bool
      | JsNull
  *)
open FbAst


# 27 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | Eof_t
  | LBrc_t
  | RBrc_t
  | LBra_t
  | RBra_t
  | Comma_t
  | Colon_t
  | Null_t
  | Bool_t of (bool)
  | Int_t of (int)
  | String_t of (string)
  | Socket_t of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_Eof_t
    | TOKEN_LBrc_t
    | TOKEN_RBrc_t
    | TOKEN_LBra_t
    | TOKEN_RBra_t
    | TOKEN_Comma_t
    | TOKEN_Colon_t
    | TOKEN_Null_t
    | TOKEN_Bool_t
    | TOKEN_Int_t
    | TOKEN_String_t
    | TOKEN_Socket_t
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Object
    | NONTERM_Members
    | NONTERM_Pair
    | NONTERM_Key
    | NONTERM_Array
    | NONTERM_Elements
    | NONTERM_Value

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | Eof_t  -> 0 
  | LBrc_t  -> 1 
  | RBrc_t  -> 2 
  | LBra_t  -> 3 
  | RBra_t  -> 4 
  | Comma_t  -> 5 
  | Colon_t  -> 6 
  | Null_t  -> 7 
  | Bool_t _ -> 8 
  | Int_t _ -> 9 
  | String_t _ -> 10 
  | Socket_t _ -> 11 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_Eof_t 
  | 1 -> TOKEN_LBrc_t 
  | 2 -> TOKEN_RBrc_t 
  | 3 -> TOKEN_LBra_t 
  | 4 -> TOKEN_RBra_t 
  | 5 -> TOKEN_Comma_t 
  | 6 -> TOKEN_Colon_t 
  | 7 -> TOKEN_Null_t 
  | 8 -> TOKEN_Bool_t 
  | 9 -> TOKEN_Int_t 
  | 10 -> TOKEN_String_t 
  | 11 -> TOKEN_Socket_t 
  | 14 -> TOKEN_end_of_input
  | 12 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Object 
    | 3 -> NONTERM_Object 
    | 4 -> NONTERM_Members 
    | 5 -> NONTERM_Members 
    | 6 -> NONTERM_Members 
    | 7 -> NONTERM_Pair 
    | 8 -> NONTERM_Pair 
    | 9 -> NONTERM_Key 
    | 10 -> NONTERM_Key 
    | 11 -> NONTERM_Array 
    | 12 -> NONTERM_Array 
    | 13 -> NONTERM_Elements 
    | 14 -> NONTERM_Elements 
    | 15 -> NONTERM_Elements 
    | 16 -> NONTERM_Elements 
    | 17 -> NONTERM_Value 
    | 18 -> NONTERM_Value 
    | 19 -> NONTERM_Value 
    | 20 -> NONTERM_Value 
    | 21 -> NONTERM_Value 
    | 22 -> NONTERM_Value 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 14 
let _fsyacc_tagOfErrorTerminal = 12

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | Eof_t  -> "Eof_t" 
  | LBrc_t  -> "LBrc_t" 
  | RBrc_t  -> "RBrc_t" 
  | LBra_t  -> "LBra_t" 
  | RBra_t  -> "RBra_t" 
  | Comma_t  -> "Comma_t" 
  | Colon_t  -> "Colon_t" 
  | Null_t  -> "Null_t" 
  | Bool_t _ -> "Bool_t" 
  | Int_t _ -> "Int_t" 
  | String_t _ -> "String_t" 
  | Socket_t _ -> "Socket_t" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | Eof_t  -> (null : System.Object) 
  | LBrc_t  -> (null : System.Object) 
  | RBrc_t  -> (null : System.Object) 
  | LBra_t  -> (null : System.Object) 
  | RBra_t  -> (null : System.Object) 
  | Comma_t  -> (null : System.Object) 
  | Colon_t  -> (null : System.Object) 
  | Null_t  -> (null : System.Object) 
  | Bool_t _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | Int_t _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | String_t _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | Socket_t _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 5us; 65535us; 0us; 2us; 13us; 29us; 17us; 29us; 23us; 29us; 25us; 29us; 2us; 65535us; 4us; 6us; 10us; 11us; 2us; 65535us; 4us; 8us; 10us; 8us; 2us; 65535us; 4us; 12us; 10us; 12us; 4us; 65535us; 13us; 30us; 17us; 30us; 23us; 30us; 25us; 30us; 3us; 65535us; 17us; 19us; 23us; 24us; 25us; 26us; 4us; 65535us; 13us; 14us; 17us; 22us; 23us; 22us; 25us; 22us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 9us; 12us; 15us; 18us; 23us; 27us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 2us; 2us; 3us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 4us; 6us; 2us; 5us; 9us; 1us; 6us; 1us; 6us; 2us; 7us; 8us; 2us; 7us; 8us; 1us; 7us; 1us; 8us; 1us; 10us; 2us; 11us; 12us; 1us; 11us; 1us; 12us; 1us; 12us; 2us; 13us; 16us; 2us; 14us; 15us; 1us; 15us; 1us; 15us; 1us; 16us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 11us; 13us; 15us; 17us; 20us; 23us; 25us; 27us; 30us; 33us; 35us; 37us; 39us; 42us; 44us; 46us; 48us; 51us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; |]
let _fsyacc_action_rows = 33
let _fsyacc_actionTableElements = [|1us; 32768us; 1us; 4us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 32768us; 2us; 5us; 10us; 16us; 11us; 9us; 0us; 16386us; 1us; 32768us; 2us; 7us; 0us; 16387us; 1us; 16388us; 5us; 10us; 1us; 16389us; 6us; 16393us; 2us; 32768us; 10us; 16us; 11us; 9us; 0us; 16390us; 1us; 32768us; 6us; 13us; 7us; 32768us; 1us; 4us; 3us; 17us; 7us; 32us; 8us; 31us; 9us; 28us; 10us; 27us; 11us; 15us; 0us; 16391us; 0us; 16392us; 0us; 16394us; 8us; 32768us; 1us; 4us; 3us; 17us; 4us; 18us; 7us; 32us; 8us; 31us; 9us; 28us; 10us; 27us; 11us; 21us; 0us; 16395us; 1us; 32768us; 4us; 20us; 0us; 16396us; 1us; 16397us; 5us; 25us; 1us; 16398us; 5us; 23us; 7us; 32768us; 1us; 4us; 3us; 17us; 7us; 32us; 8us; 31us; 9us; 28us; 10us; 27us; 11us; 21us; 0us; 16399us; 7us; 32768us; 1us; 4us; 3us; 17us; 7us; 32us; 8us; 31us; 9us; 28us; 10us; 27us; 11us; 21us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 0us; 16406us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 5us; 6us; 10us; 11us; 13us; 14us; 16us; 18us; 21us; 22us; 24us; 32us; 33us; 34us; 35us; 44us; 45us; 47us; 48us; 50us; 52us; 60us; 61us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 1us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 4us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 7us; 8us; 8us; 8us; 8us; 8us; 8us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16386us; 65535us; 16387us; 65535us; 65535us; 65535us; 16390us; 65535us; 65535us; 16391us; 16392us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 65535us; 65535us; 16399us; 65535us; 16400us; 16401us; 16402us; 16403us; 16404us; 16405us; 16406us; |]
let _fsyacc_reductions ()  =    [| 
# 178 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : FbAst.expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startMain));
# 187 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Object)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     _1 
                   )
# 41 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : FbAst.expr));
# 198 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "JsObject", mkList []) 
                   )
# 45 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Object));
# 208 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Members)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "JsObject", _2) 
                   )
# 46 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Object));
# 219 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Pair)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     mkList [_1] 
                   )
# 50 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Members));
# 230 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Quote _1 
                   )
# 51 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Members));
# 241 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Pair)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Members)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "@Cons", TplConstr [| _1; _3 |])
                   )
# 52 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Members));
# 253 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Key)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Value)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "JsPair", TplConstr [| _1; _3 |]) 
                   )
# 56 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Pair));
# 265 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Key)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "JsPair", TplConstr [| _1; Quote _3 |]) 
                   )
# 57 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Pair));
# 277 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Quote _1 
                   )
# 61 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Key));
# 288 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Cst(Str _1) 
                   )
# 62 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Key));
# 299 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "JsArray", mkList []) 
                   )
# 66 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Array));
# 309 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Elements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "JsArray", _2) 
                   )
# 67 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Array));
# 320 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Quote _1 
                   )
# 71 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Elements));
# 331 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Value)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     mkList [_1] 
                   )
# 72 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Elements));
# 342 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Value)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Elements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "@Cons", TplConstr [| _1; _3 |]) 
                   )
# 73 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Elements));
# 354 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Elements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "@Cons", TplConstr [| Quote _1; _3 |]) 
                   )
# 74 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Elements));
# 366 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "JsString", Cst(Str _1)) 
                   )
# 78 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Value));
# 377 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "JsInteger", Cst(Int _1)) 
                   )
# 79 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Value));
# 388 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Object)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     _1 
                   )
# 80 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Value));
# 399 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Array)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     _1 
                   )
# 81 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Value));
# 410 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     Call(AdtConstr "JsBoolean", Cst(Bool _1)) 
                   )
# 82 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Value));
# 421 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                                                     AdtConstr "JsNull" 
                   )
# 83 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fsy"
                 : 'Value));
|]
# 432 "C:\Users\Ahmad\documents\visual studio 2010\Projects\FbLang\JsonLang\JsonPar.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 15;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : FbAst.expr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
